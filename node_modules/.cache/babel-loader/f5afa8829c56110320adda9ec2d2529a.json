{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspaces\\\\eventosreact\\\\src\\\\view\\\\usuario-novo\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../../config/firebase';\nimport Navbar from '../../components/navbar';\nimport 'firebase/auth';\nimport './usuario-novo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NovoUsuario() {\n  _s();\n\n  //guardar o que foi digitado em um lugar da memória\n  const [email, setEmail] = useState();\n  const [senha, setSenha] = useState();\n  const [msgTipo, setMsgTipo] = useState();\n  const [msg, setMsg] = useState();\n  const [carregando, setCarregando] = useState(); //da informações se foi cadastrado ou não.\n  //a api que cudia da análise é o Firebase\n\n  function cadastrar() {\n    //valor 1 e de verdade\n    setCarregando(1); //mensagem começa null\n\n    setMsgTipo(null); //a função verifica se o usuário digitou algo\n\n    if (!email || !senha) {\n      setMsgTipo('erro');\n      setMsg('Informe Email e Senha!');\n      return;\n    } //firebase na biblioteca auth envia email e password para cadastro\n\n\n    firebase.auth().createUserWithEmailAndPassword(email, senha).then(resultado => {\n      setCarregando(0);\n      setMsgTipo('sucesso');\n    }) //caso de errado os recados que vem em inglês são traduzidos\n    .catch(erro => {\n      setCarregando(0);\n      setMsgTipo('erro');\n\n      switch (erro.message) {\n        case 'Password should be at least 6 characters':\n          setMsg('A senha deve ter pelo menos 6 caracteres!');\n          break;\n\n        case 'The email address is already in use by another account.':\n          setMsg('Este email já está sendo utilizado por outro usuário!');\n          break;\n\n        case 'The email address is badly formatted.':\n          setMsg('O formato do seu email é inválido!');\n          break;\n\n        default:\n          setMsg('Não foi possível cadastrar. Tente novamente mais tarde!');\n          break;\n      }\n    });\n  } //aqui e construido a tela, lembre que estamos usando o bootstrap\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-cadastro\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"text-center form-login mx-auto mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3 text-black font-weight-bold\",\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        className: \"form-control my-2\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setSenha(e.target.value),\n        type: \"password\",\n        className: \"form-control my-2\",\n        placeholder: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), carregando ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"spinner-border text-danger\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cadastrar,\n        type: \"button\",\n        className: \"btn btn-lg btn-block mt-3 mb-5 btn-cadastro\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msg-login text-black text-center my-5\",\n        children: [msgTipo === 'sucesso' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"WoW!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), \"Usu\\xE1rio cadastrado com sucesso! \\uD83D\\uDE0E\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), msgTipo === 'erro' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ops!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), \" \", msg, \" \\uD83D\\uDE22\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NovoUsuario, \"AO90Mc2u3wQ5cD++oUjRu4VJOpI=\");\n\n_c = NovoUsuario;\nexport default NovoUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"NovoUsuario\");","map":{"version":3,"sources":["D:/workspaces/eventosreact/src/view/usuario-novo/index.js"],"names":["React","useState","firebase","Navbar","NovoUsuario","email","setEmail","senha","setSenha","msgTipo","setMsgTipo","msg","setMsg","carregando","setCarregando","cadastrar","auth","createUserWithEmailAndPassword","then","resultado","catch","erro","message","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport firebase from '../../config/firebase';\r\nimport Navbar from '../../components/navbar'\r\nimport 'firebase/auth';\r\nimport './usuario-novo.css';\r\n\r\nfunction NovoUsuario() {\r\n  //guardar o que foi digitado em um lugar da memória\r\n  const [email, setEmail] = useState();\r\n  const [senha, setSenha] = useState();\r\n  const [msgTipo, setMsgTipo] = useState();\r\n  const [msg, setMsg] = useState();\r\n  const [carregando, setCarregando] = useState();\r\n\r\n  //da informações se foi cadastrado ou não.\r\n  //a api que cudia da análise é o Firebase\r\n  function cadastrar() {\r\n    //valor 1 e de verdade\r\n    setCarregando(1);\r\n\r\n    //mensagem começa null\r\n    setMsgTipo(null);\r\n    //a função verifica se o usuário digitou algo\r\n    if (!email || !senha) {\r\n      setMsgTipo('erro');\r\n      setMsg('Informe Email e Senha!');\r\n      return;\r\n    }\r\n    //firebase na biblioteca auth envia email e password para cadastro\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, senha)\r\n      .then((resultado) => {\r\n        setCarregando(0);\r\n        setMsgTipo('sucesso');\r\n      }) //caso de errado os recados que vem em inglês são traduzidos\r\n      .catch((erro) => {\r\n        setCarregando(0);\r\n        setMsgTipo('erro');\r\n        switch (erro.message) {\r\n          case 'Password should be at least 6 characters':\r\n            setMsg('A senha deve ter pelo menos 6 caracteres!');\r\n            break;\r\n          case 'The email address is already in use by another account.':\r\n            setMsg('Este email já está sendo utilizado por outro usuário!');\r\n            break;\r\n          case 'The email address is badly formatted.':\r\n            setMsg('O formato do seu email é inválido!');\r\n            break;\r\n          default:\r\n            setMsg('Não foi possível cadastrar. Tente novamente mais tarde!');\r\n            break;\r\n        }\r\n      });\r\n  }\r\n  //aqui e construido a tela, lembre que estamos usando o bootstrap\r\n  return (\r\n    <div className=\"form-cadastro\">\r\n      <form className=\"text-center form-login mx-auto mt-5\">\r\n        <h1 className=\"h3 mb-3 text-black font-weight-bold\">Cadastro</h1>\r\n        <input\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          onChange={(e) => setSenha(e.target.value)}\r\n          type=\"password\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Senha\"\r\n        />\r\n        {carregando ? (\r\n          <div class=\"spinner-border text-danger\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n            <button\r\n              onClick={cadastrar}\r\n              type=\"button\"\r\n              className=\"btn btn-lg btn-block mt-3 mb-5 btn-cadastro\"\r\n            >\r\n              Cadastrar\r\n            </button>\r\n          )}\r\n        <div className=\"msg-login text-black text-center my-5\">\r\n          {msgTipo === 'sucesso' && (\r\n            <span>\r\n              <strong>WoW!</strong>Usuário cadastrado com sucesso! &#128526;{' '}\r\n            </span>\r\n          )}\r\n          {msgTipo === 'erro' && (\r\n            <span>\r\n              <strong>Ops!</strong> {msg} &#128546;{' '}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NovoUsuario;\r\n"]},"metadata":{},"sourceType":"module"}